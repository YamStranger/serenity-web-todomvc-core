group = 'net.serenity-bdd'

repositories {
    mavenLocal()
    jcenter()
}

ext {
    serenityCoreVersion = "1.1.26-rc.1"
    serenityJBehaveVersion = "1.6.0"
    serenityCucumberVersion = "1.1.5"
}

buildscript {
    ext {
        serenityGradlePluginVersion = "1.1.26-rc.1"
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$serenityGradlePluginVersion")
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"

dependencies {
    compile localGroovy()
    compile "net.serenity-bdd:serenity-core:$serenityCoreVersion"
    compile "net.serenity-bdd:serenity-junit:$serenityCoreVersion"
    compile("net.serenity-bdd:serenity-screenplay:$serenityCoreVersion")
    compile("net.serenity-bdd:browse-the-web:$serenityCoreVersion")
    compile("net.serenity-bdd:serenity-cucumber:$serenityCucumberVersion")
    compile("net.serenity-bdd:serenity-jbehave:$serenityJBehaveVersion")


    compile 'org.slf4j:slf4j-simple:1.7.12'
    compile 'org.codehaus.groovy:groovy-all:2.3.10'
    compile 'junit:junit:4.12'
    compile 'com.googlecode.lambdaj:lambdaj:2.3.3'
    compile 'org.assertj:assertj-core:3.1.0'
    compile 'org.hamcrest:hamcrest-all:1.3'

}


test {
    testLogging {
        // showStandardStreams = true
    }
    /* Pass all system properties: */
    systemProperties System.getProperties()

    maxParallelForks = Runtime.runtime.availableProcessors()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

task copyDeps(type: Copy) {
    from configurations.runtime + configurations.testCompile
    into project.projectDir.path + "/lib"
}

gradle.startParameter.continueOnFailure = true